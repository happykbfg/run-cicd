#!/bin/bash

CTRLDIR=~/run-cicd

echo ""
echo "************* RUN BUILD Container image *****************"
echo ""
echo "STEP1: Get Parameters"

# get parameters
if ([ $# -lt 2 ]) || ([ $# -eq 1 ] && [ "$1" == "-h" -o "$1" == "--help" ]); then
  echo "build-image <root directory> <dev lang>"
  echo " root directory: project의 최상위 디렉토리. '.'은 현재 디렉토리 의미함. "
  echo " dev lang: 개발 언어 (java, react, nodejs)"
  echo " ex) ./build-image ~/work java"
  echo " ex) ./build-image . react"
  exit 1
fi

basedir=$1
devlang=$2

if [ $# -eq 3 ]; then 
  CTRLDIR=$3
fi

echo ""

# if the lang is java, do maven build. 
if [ "${devlang}" == "java" ]; then
  echo "*** RUN -> mvn clean package -DskipTests -f ${basedir}"
  mvn clean package -DskipTests -f ${basedir}  
fi

# if the lang is react, do copy config file if not exists.  
if ([ "${devlang}" == "react" ]) && ! ([ -f ${basedir}/default.conf.template  ]) ; then
  cp ${CTRLDIR}/dockerfile/default.conf.template ${basedir} 
fi

# set variables from config.properties: converted from '.' to '_'
echo "STEP2. Set environment variables "
eval $(${CTRLDIR}/cmd/set-env ${basedir}/cicd/cicd-common.properties)

echo ""

# generte Dockerfile
echo "STEP3. Generate Dockerfile "

dockerfile_name=""

if [ "${devlang}" == "java" ]; then
  dockerfile_name=Dockerfile4java
elif [ "${devlang}" == "nodejs" ]; then
  dockerfile_name=Dockerfile4nodejs
elif [ "${devlang}" == "react" ]; then
  dockerfile_name=Dockerfile4react
else
  echo "NOT Supported Language!"
  exit 1
fi

# build image
echo "STEP4. Build image "
echo "image: ${image_registry}/${image_project}/${image_repository}:${image_tag}"
if [ "${devlang}" == "java" ]; then
  echo "*** RUN -> docker build --build-arg ARTIFACTORY_FILE=${image_repository}.jar -f ${CTRLDIR}/dockerfile/${dockerfile_name} -t ${image_registry}/${image_project}/${image_repository}:${image_tag} ${basedir}"
  docker build --build-arg ARTIFACTORY_FILE=${image_repository}.jar -f ${CTRLDIR}/dockerfile/${dockerfile_name} -t ${image_registry}/${image_project}/${image_repository}:${image_tag} ${basedir}
elif [ "${devlang}" == "nodejs" ]; then
  main_app=`${CTRLDIR}/cmd/jq '.main' ${basedir}/package.json`
  main_app="${main_app%\"}"
  main_app="${main_app#\"}"
  if [ "${main_app}" == "" ]; then
    echo "CAN'T get main application. It must be specified in package.json as 'main' key."
    exit 1
  fi

  echo "*** RUN -> docker build --build-arg MAIN_APP=${main_app} -f ${CTRLDIR}/dockerfile/${dockerfile_name} -t ${image_registry}/${image_project}/${image_repository}:${image_tag} ${basedir}"
  docker build --build-arg MAIN_APP=${main_app} -f ${CTRLDIR}/dockerfile/${dockerfile_name} -t ${image_registry}/${image_project}/${image_repository}:${image_tag} ${basedir}
else
  echo "*** RUN -> docker build -f ${CTRLDIR}/dockerfile/${dockerfile_name} -t ${image_registry}/${image_project}/${image_repository}:${image_tag} ${basedir}"
  docker build -f ${CTRLDIR}/dockerfile/${dockerfile_name} -t ${image_registry}/${image_project}/${image_repository}:${image_tag} ${basedir}
fi
echo ""
if [ $? -eq 1 ]; then
  echo "FAIL TO Build image "
  exit 1
fi

echo ""
echo "************* END BUILD Container image *****************"
echo ""
exit 0
